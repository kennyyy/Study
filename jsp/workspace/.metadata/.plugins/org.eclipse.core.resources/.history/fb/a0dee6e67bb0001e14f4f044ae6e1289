package com.sa.apply.service;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Random;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.sa.apply.model.ApplyDAO;
import com.sa.apply.model.ApplyVO;
import com.sa.apply.model.OptionDAO;
import com.sa.apply.model.OptionVO;
import com.sa.apply.model.SeatDAO;
import com.sa.apply.model.SeatVO;

public class ApplyServiceImpl implements ApplyService {

	private ApplyDAO adao = ApplyDAO.getInstance();
	private OptionDAO odao = OptionDAO.getInstance();
	private SeatDAO sdao = SeatDAO.getInstance();

	@Override
	public ArrayList<ApplyVO> getApply(HttpServletRequest request, HttpServletResponse response) {
		ArrayList<ApplyVO> list = adao.getApply();

		return list;
	}

	@Override
	public ArrayList<OptionVO> getOption(HttpServletRequest request, HttpServletResponse response) {
		ArrayList<OptionVO> list = odao.getOption();

		return list;
	}

	// 방의 가로 세로 데이터를 가져옴
	@Override
	public ArrayList<String> getOptionWH(HttpServletRequest request, HttpServletResponse response) {
		String roomnumber = request.getParameter("roomnumber");
		ArrayList<String> seatWH = odao.getOptionWH(roomnumber);

		return seatWH;
	}

	// 유저 신청 삽입
	@Override
	public int insertApply(HttpServletRequest request, HttpServletResponse response) {
		HttpSession session = request.getSession();
		String userid = (String) session.getAttribute("user_id");
		String roomnumber = request.getParameter("roomnumber");

		int result = adao.insertUser(userid, roomnumber);
		return result;
	}

	@Override
	public ArrayList<String> getSeat(HttpServletRequest request, HttpServletResponse response) {
		String roomnumber = request.getParameter("roomnumber");
		ArrayList<SeatVO> list = sdao.getSeat(roomnumber);

		ArrayList<String> isCloseSeat = new ArrayList<String>();

		for (SeatVO s : list) {
			isCloseSeat.add(s.getSeat());
			System.out.println(s.getSeat());
		}
		request.setAttribute("roomnumber", roomnumber);
		return isCloseSeat;
	}

	@Override
	public ArrayList<ApplyVO> getIsWin(HttpServletRequest request, HttpServletResponse response) {
		System.out.println("hi?");
		String roomnumber = request.getParameter("roomnumber");
		System.out.println(roomnumber);
		ArrayList<ApplyVO> iswin = adao.getIsWin(roomnumber);
		System.out.println(iswin);
		return iswin;
	}

	@Override
	// 세션이 있어야함 보류
	public int selectSeatUpdate(HttpServletRequest request, HttpServletResponse response) {
		String selectseat = request.getParameter("selectseat");
		String roomnumber = request.getParameter("roomnumber");
		System.out.println(roomnumber);
		// int result = adao.selectSeatUpdate(selectseat, roomnumber, null);
		return 0;
	}

	@Override
	public int getNumCount(HttpServletRequest request, HttpServletResponse response) {
		String roomnumber = request.getParameter("roomnumber");

		int numCount = odao.getNumCount(roomnumber);

		return numCount;
	}

	@Override
	public void startRandomSeat(HttpServletRequest request, HttpServletResponse response) {
		String roomnumber = request.getParameter("roomnumber");
		int randomTime = 5;
		int winningNum = 3;
		ArrayList<String> applyUserList = adao.getApply(roomnumber);
		Set<String> winningUser = new HashSet<>();
		Random random = new Random();

		winningUser.add(applyUserList.get(random.nextInt(applyUserList.size())));
		winningUser.add(applyUserList.get(random.nextInt(applyUserList.size())));
		winningUser.add(applyUserList.get(random.nextInt(applyUserList.size())));
		
		
		 
 		applyUserList.removeAll(winningUser); 
 		winningUser.clear();
 		System.out.println(applyUserList); 
 		System.out.println(winningUser); 
		 
		 

		// 랜덤 주기 시간
		// 당첨 인원 나중에 추가해줘야함

	}

}
