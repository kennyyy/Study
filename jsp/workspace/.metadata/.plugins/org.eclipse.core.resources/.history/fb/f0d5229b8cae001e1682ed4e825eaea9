package com.myweb.controller;

import java.io.IOException;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.myweb.board.model.BoardVO;
import com.myweb.board.service.BoardServiceImpl;


@WebServlet("*.board")
public class BoardController extends HttpServlet {
	private static final long serialVersionUID = 1L;
       

    public BoardController() {
        super();
    }


	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doAction(request, response);
	}


	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doAction(request, response);
	}
	
	protected void doAction(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("utf-8");
		
		String uri = request.getRequestURI();
		String path = uri.substring(request.getContextPath().length());
		System.out.println(path);
		
		BoardServiceImpl service = new BoardServiceImpl();
		
		
		if(path.equals("/board/list.board")) { // 목록화면
			
			//목록데이터를 가지고 화면으로 이동
			
			ArrayList<BoardVO> list = service.getList(request, response);
			request.setAttribute("list", list);
			
			request.getRequestDispatcher("board_list.jsp").forward(request, response);
			
		}else if(path.equals("/board/write.board")) { //글쓰기 화면
			request.getRequestDispatcher("board_write.jsp").forward(request, response);
		}else if(path.equals("/board/registForm.board")) { //글 등록
			service.regist(request, response);
			
			
			
			
			
			
			//MVC2에서는 redirect를 다시 컨트롤러에 연결하는 현태로 사용
			response.sendRedirect("list.board");
		}
		
		
		
	}
		

}
