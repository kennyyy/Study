package com.myweb.user.service;

import java.sql.Timestamp;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.myweb.user.model.UserDAO;
import com.myweb.user.model.UserVO;

public class UserServiceImpl implements UserService{
	
	private UserDAO dao = UserDAO.getInstance();
	
	@Override
	public int join(HttpServletRequest request, HttpServletResponse response) {
		String id = request.getParameter("id");
		String pw = request.getParameter("pw");
		String name = request.getParameter("name");
		String email = request.getParameter("email");
		String address = request.getParameter("address");
		String gender = request.getParameter("gender");
		
		System.out.println(id);
		System.out.println(pw);
		System.out.println(name);
		System.out.println(email);
		System.out.println(address);
		System.out.println(gender);
		
		
		int result = dao.idCheck(id);
		
		if(result == 1) { //아이디 중복
			return result;
		}else { //회원가입
			UserVO vo = new UserVO(id, pw, name, email, address, gender, null);
			dao.insertUser(vo);
			return result;
		}
	}

	@Override
	public UserVO login(HttpServletRequest request, HttpServletResponse response) {
		String id = request.getParameter("id");
		String pw = request.getParameter("pw");
		
		UserVO vo = dao.login(id, pw);
		
		return vo;
	}

	@Override
	public UserVO getUserInfo(HttpServletRequest request, HttpServletResponse response) {
		//회원 아이디는 세션에 있습니다.
		HttpSession session = request.getSession();
		String id = (String)session.getAttribute("user_id");
		UserVO vo = dao.getUserInfo(id);
		System.out.println();
		return vo;
	}

	@Override
	public int update(HttpServletRequest request, HttpServletResponse response) {
		String id = request.getParameter("id");
		String pw = request.getParameter("pw");
		String name = request.getParameter("name");
		String email = request.getParameter("email");
		String address = request.getParameter("address");
		String gender = request.getParameter("gender");
		
		UserVO vo = new UserVO(id, pw, name, email, address, gender, null);
		int result = dao.update(vo);
		
		return result;
	}

}
