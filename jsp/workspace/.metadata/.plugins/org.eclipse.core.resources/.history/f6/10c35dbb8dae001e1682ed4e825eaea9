package com.myweb.board.model;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Timestamp;
import java.util.ArrayList;

import javax.naming.InitialContext;
import javax.sql.DataSource;

import com.myweb.user.model.UserDAO;
import com.myweb.util.JdbcUtil;

public class BoardDAO {
	//싱글톤
	
	private static BoardDAO instance = new BoardDAO();
	
	private BoardDAO() {
		try {
			//드라이버 호출문장
			//Class.forName("oracle.jdbc.driver.OracleDriver");
			
			//커넥션 pool
			//초기설정 값을 얻을 수 있는 객체
			
			InitialContext init = new InitialContext();
			dataSource = (DataSource)init.lookup("java:comp/env/jdbc/oracle");
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}
	
	public static BoardDAO getInstance() {
		return instance;
	}
	///////////////////////////////////////
	
	//private String url = JdbcUtil.url;
	//private String uid = JdbcUtil.uid;
	//private String upw = JdbcUtil.upw;
	
	//커넥션풀에서 얻어온 디비객체 정보
	private DataSource dataSource;
	
	public void insert(String writer, String title, String content) {
		Connection conn = null;
		PreparedStatement pstmt = null;
		
		String sql = "insert into board (bno, writer, title, content) "
				+ "values (board_seq.nextval, ?, ? , ?)";
		try {
			conn = dataSource.getConnection();
			
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, writer);
			pstmt.setString(2, title);
			pstmt.setString(3, content);
			
			pstmt.executeUpdate();
			
		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			JdbcUtil.colse(conn, pstmt, null);
		}
	}
	//목록조회
	public ArrayList<BoardVO> getList(){
		
		ArrayList<BoardVO> list = new ArrayList<BoardVO>();
		
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		
		String sql = "select * from board order by bno desc";
		
		try {
			
			conn = dataSource.getConnection();
			pstmt = conn.prepareStatement(sql);
			
			rs = pstmt.executeQuery();
			
			while(rs.next()) {
				int bno = rs.getInt("bno");
				String title = rs.getString("title");
				String content = rs.getString("content");
				String writer = rs.getString("writer");
				int hit = rs.getInt("hit");
				Timestamp redate = rs.getTimestamp("regdate");
				
				BoardVO vo = new BoardVO(bno, writer, title, content, hit, redate);
				list.add(vo);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		finally {
			JdbcUtil.colse(conn, pstmt, rs);
		}
		
		return list;
	}
	
}
