/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.84
 * Generated at: 2024-01-13 07:41:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.room;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class room_005fsetting_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/C:/Users/user/Desktop/course/java/workspace/JavaProject/jsp/apache-tomcat-9.0.84/wtpwebapps/SeatingsApply/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
    _jspx_dependants.put("/include/footer.jsp", Long.valueOf(1705131232183L));
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1704790854557L));
    _jspx_dependants.put("/include/header.jsp", Long.valueOf(1705131691343L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <!-- IONICONS -->\r\n");
      out.write("    <script src=\"https://unpkg.com/ionicons@5.2.3/dist/ionicons.js\"></script>\r\n");
      out.write("    <!-- JS -->\r\n");
      out.write("    <script src=\"/assets/js/main.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <!-- CSS -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/assets/css/styles.css\">\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"/assets/css/setStyles.css\">\r\n");
      out.write("    <title>좌석 선택 프로그램</title>\r\n");
      out.write("    \r\n");
      out.write("    <style>\r\n");
      out.write("		.container{\r\n");
      out.write("			background-color: rgba(0, 0, 0, 0.05);\r\n");
      out.write("			width: 100wh;\r\n");
      out.write("			height: 100vh;\r\n");
      out.write("\r\n");
      out.write("		}\r\n");
      out.write("		header{\r\n");
      out.write("			\r\n");
      out.write("			width: 100%;\r\n");
      out.write("			height: 12.5%;\r\n");
      out.write("			background-color: #26282A;\r\n");
      out.write("			color: white;\r\n");
      out.write("		}\r\n");
      out.write("		section{\r\n");
      out.write("			margin: 0 auto;\r\n");
      out.write("			width: 100%;\r\n");
      out.write("			height: 67.5%;\r\n");
      out.write("		}\r\n");
      out.write("		footer{\r\n");
      out.write("			\r\n");
      out.write("			width: 100%;\r\n");
      out.write("			height: 20%;\r\n");
      out.write("			background-color: #26282A;\r\n");
      out.write("			color: #fff;\r\n");
      out.write("			text-align: center;\r\n");
      out.write("		}\r\n");
      out.write("		footer p{\r\n");
      out.write("			padding-top: 30px;\r\n");
      out.write("		}\r\n");
      out.write("		footer a{\r\n");
      out.write("			text-decoration: none;\r\n");
      out.write("			color: white;\r\n");
      out.write("		}\r\n");
      out.write("		.header_container{\r\n");
      out.write("			width: 100%;\r\n");
      out.write("			height: 100%;\r\n");
      out.write("			display: flex;\r\n");
      out.write("			justify-content: start;\r\n");
      out.write("			align-items: center;\r\n");
      out.write("			flex-direction: row;\r\n");
      out.write("		\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		.header_container h1{\r\n");
      out.write("			text-align: center;\r\n");
      out.write("			padding-right: 100px;\r\n");
      out.write("			width: 60%;\r\n");
      out.write("			height: 100%;\r\n");
      out.write("			line-height: 100px;\r\n");
      out.write("			color: white;\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		.section_container{\r\n");
      out.write("			width: 60%;\r\n");
      out.write("			height: 90%;\r\n");
      out.write("			margin: 50px auto;\r\n");
      out.write("\r\n");
      out.write("			border-radius: 15px;\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("	</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body id=\"body-pd\">\r\n");
      out.write("    <div class=\"l-navbar expander\" id=\"navbar\">\r\n");
      out.write("        <nav class=\"nav\">\r\n");
      out.write("            <div>\r\n");
      out.write("                <div class=\"nav__brand \">\r\n");
      out.write("                    <ion-icon name=\"menu-outline\" class=\"nav__toggle\" id=\"nav-toggle\"></ion-icon>\r\n");
      out.write("                    <a href=\"#\" class=\"nav__logo\">Menu</a>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"nav__list\">\r\n");
      out.write("                    <a href=\"/\" class=\"nav__link active\">\r\n");
      out.write("                      \r\n");
      out.write("                        <span class=\"nav_name\">Home</span>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    \r\n");
      out.write("                    <a href=\"/apply/list.apply\" class=\"nav__link\">\r\n");
      out.write("      \r\n");
      out.write("                        <span class=\"nav_name\">Room Join</span>\r\n");
      out.write("                    </a>\r\n");
      out.write("               \r\n");
      out.write("\r\n");
      out.write("                    <a href=\"/room/roomSet.roomSet\" class=\"nav__link\">\r\n");
      out.write("\r\n");
      out.write("                        <span class=\"nav_name\">Room Setting</span>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    \r\n");
      out.write("                    <a href=\"/list.other\" class=\"nav__link\">\r\n");
      out.write("\r\n");
      out.write("                        <span class=\"nav_name\">Other</span>\r\n");
      out.write("                    </a>\r\n");
      out.write("\r\n");
      out.write("					");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </nav>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("		<header>\r\n");
      out.write("			<div class=\"header_container\">\r\n");
      out.write("\r\n");
      out.write("					<h1>HOME</h1>\r\n");
      out.write("			\r\n");
      out.write("			</div>\r\n");
      out.write("		</header>\r\n");
      out.write("		\r\n");
      out.write("		<section>\r\n");
      out.write("			<div class=\"section_container\">");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body class=\"setBody\">\r\n");
      out.write("\r\n");
      out.write("<div class=\"containerSetRoom\">\r\n");
      out.write("\r\n");
      out.write("    <h1 class=\"abc\">방 생성</h1>\r\n");
      out.write("    <form action=\"roomForm.roomSet\" method=\"post\">\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label class=\"setLabel\" for=\"mid\">방장 ID:</label>\r\n");
      out.write("            <input type=\"text\" id=\"mid\" name=\"mid\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${'Master1'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label for=\"numCount\">방 인원:</label>\r\n");
      out.write("            <input type=\"number\" id=\"numCount\" name=\"numCount\" required>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label for=\"deadLine\">마감 날짜:</label><br>\r\n");
      out.write("            <input type=\"date\" id=\"deadLine\" name=\"deadLine\" required>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label for=\"closingTime\">마감 시간:</label>\r\n");
      out.write("            <input type=\"time\" id=\"closingTime\" name=\"closingTime\" required>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label for=\"width\">좌석 가로 길이: (최대 길이를 입력해주세요.)</label>\r\n");
      out.write("            <input type=\"number\" id=\"width\" name=\"width\" required>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label for=\"height\">좌석 세로 길이: (최대 길이를 입력해주세요.)</label>\r\n");
      out.write("            <input type=\"number\" id=\"height\" name=\"height\" required>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label for=\"RANDOMCYCLE\">랜덤 주기: (초 단위) (미개발 상태)</label>\r\n");
      out.write("            <input type=\"number\" id=\"RANDOMCYCLE\" name=\"RANDOMCYCLE\" value=\"null\" readonly>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label for=\"CYCLENUM\">주기당 당첨 인원: (미개발 상태)</label>\r\n");
      out.write("            <input type=\"number\" id=\"CYCLENUM\" name=\"CYCLENUM\" value=\"null\" readonly>\r\n");
      out.write("        </div>\r\n");
      out.write("        <input type=\"submit\" value=\"다음 설정\">\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        // 오늘 날짜를 가져와서 YYYY-MM-DD 형식으로 변환\r\n");
      out.write("        var today = new Date();\r\n");
      out.write("        var dd = String(today.getDate()).padStart(2, '0');\r\n");
      out.write("        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n");
      out.write("        var yyyy = today.getFullYear();\r\n");
      out.write("\r\n");
      out.write("        today = yyyy + '-' + mm + '-' + dd;\r\n");
      out.write("\r\n");
      out.write("        // min 속성에 오늘 날짜 할당\r\n");
      out.write("        document.getElementById(\"deadLine\").setAttribute(\"min\", today);\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        // 오늘 날짜와 현재 시간 가져오기\r\n");
      out.write("        var today = new Date();\r\n");
      out.write("        var dd = String(today.getDate()).padStart(2, '0');\r\n");
      out.write("        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n");
      out.write("        var yyyy = today.getFullYear();\r\n");
      out.write("        var hours = String(today.getHours()).padStart(2, '0');\r\n");
      out.write("        var minutes = String(today.getMinutes()).padStart(2, '0');\r\n");
      out.write("\r\n");
      out.write("        var currentDate = yyyy + '-' + mm + '-' + dd;\r\n");
      out.write("        var currentTime = hours + ':' + minutes;\r\n");
      out.write("\r\n");
      out.write("        // 마감 날짜와 시간 input 태그 객체 가져오기\r\n");
      out.write("        var deadLine = document.getElementById(\"deadLine\");\r\n");
      out.write("        var closingTime = document.getElementById(\"closingTime\");\r\n");
      out.write("\r\n");
      out.write("        // 마감 날짜가 변경되었을 때의 이벤트 핸들러 설정\r\n");
      out.write("        deadLine.onchange = function() {\r\n");
      out.write("            if(deadLine.value === currentDate) {\r\n");
      out.write("                // 마감 날짜가 오늘 날짜일 경우, 마감 시간을 현재 시간으로 설정하고,\r\n");
      out.write("                // 현재 시간 이후만 선택 가능하게 함\r\n");
      out.write("                closingTime.value = currentTime;\r\n");
      out.write("                closingTime.min = currentTime;\r\n");
      out.write("            } else {\r\n");
      out.write("                // 그 외의 경우, 마감 시간 선택 제한 해제\r\n");
      out.write("                closingTime.min = \"00:00\";\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // 1분마다 현재 시간을 체크하고 업데이트하는 코드\r\n");
      out.write("        setInterval(function() {\r\n");
      out.write("            var now = new Date();\r\n");
      out.write("            var nowHours = String(now.getHours()).padStart(2, '0');\r\n");
      out.write("            var nowMinutes = String(now.getMinutes()).padStart(2, '0');\r\n");
      out.write("            var nowTime = nowHours + ':' + nowMinutes;\r\n");
      out.write("\r\n");
      out.write("            // 마감 날짜가 오늘 날짜이고, 마감 시간이 현재 시간보다 이전일 경우\r\n");
      out.write("            if(deadLine.value === currentDate && closingTime.value < nowTime) {\r\n");
      out.write("                closingTime.value = nowTime; // 마감 시간을 현재 시간으로 업데이트\r\n");
      out.write("            }\r\n");
      out.write("            closingTime.min = nowTime; // 마감 시간의 최소값을 현재 시간으로 설정\r\n");
      out.write("        }, 60000); // 60000밀리초(1분)마다 함수를 실행\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("		</section>\r\n");
      out.write("		\r\n");
      out.write("		<footer>\r\n");
      out.write("			<div class=\"footer_content\">\r\n");
      out.write("\r\n");
      out.write("				<p>©2024  Communications, Inc. <span>All rights reserved.</span></p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</footer>\r\n");
      out.write("	</div>\r\n");
      out.write("		\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("						");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("                    ");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("                    ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /include/header.jsp(113,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.user_id == null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("						\r\n");
          out.write("	                    <a href=\"/join.member\" class=\"nav__link\">\r\n");
          out.write("	                        \r\n");
          out.write("	                        <span class=\"nav_name\">Join</span>\r\n");
          out.write("	                    </a>\r\n");
          out.write("	                    \r\n");
          out.write("	               		 <a href=\"/login.member\" class=\"nav__link\">\r\n");
          out.write("	\r\n");
          out.write("	                   		 <span class=\"nav_name\">Log In</span>\r\n");
          out.write("	                    </a>\r\n");
          out.write("	                    ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("	                    \r\n");
          out.write("	                    <a href=\"/mypage.member\" class=\"nav__link\">\r\n");
          out.write("	                        \r\n");
          out.write("	                        <span class=\"nav_name\">MYPAGE</span>\r\n");
          out.write("	                    </a>\r\n");
          out.write("	                    \r\n");
          out.write("	               		 <a href=\"/logout.member\" class=\"nav__link\">\r\n");
          out.write("	\r\n");
          out.write("	                    	<span class=\"nav_name\">Log Out</span>\r\n");
          out.write("	                    </a>\r\n");
          out.write("                    ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }
}
