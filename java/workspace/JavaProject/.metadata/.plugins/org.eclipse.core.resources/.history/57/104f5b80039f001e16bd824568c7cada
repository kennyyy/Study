package com.jdbc.example;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;

public class Model {
	private String url = "jdbc:oracle:thin:@localhost:1521:xe";
	private String uid = "hr";
	private String upw = "hr";
	//select할 내용작성
	public void selectOne() {
		
		
		String sql= "SELECT * FROM EMPLOYEES WHERE EMPLOYEE_ID >= ?";
		
		
		
		
		//모든 jdbc코드는 try~catch구문에서 작성이 들어가야 합니다. (throws를 던지고 있기 때문에)
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null; 
		try {
			//1. JDBC 드라이버 준비
			Class.forName("oracle.jdbc.driver.OracleDriver");
			
			
			//2. conn객체 생성
			
			conn = DriverManager.getConnection(url, uid, upw);
			
			//3. conn으로부터 statement 객체 생성 - sql상태를 지정하기 위한 객체
			
			pstmt = conn.prepareStatement(sql);
			
			//?에 개수에 맞추어 값을 채웁니다. 
			//setString(순서 , 문자열)
			//setInt(순서 , 숫자)
			//setDouble(순서 , 실수)
			pstmt.setString(1 , "120");
			
			//4. 실행 
			//executeQuery - select문에 사용합니다.
			//executeUpdate - insert, update, delete문에 사용합니다.
			
			rs = pstmt.executeQuery();
			
			
			while(rs.next()) { // next() 현재 값이 있으면 true, 없으면 false (row단위로 이동)
				//rs.getString(컬럼명) - 문자열 반환
				//rs.getInt(컬럼명) - 정수형 반환
				//rs.getDouble(컬럼명) - 실수형 반환
				//rs.getDate(컬럼명) - 날자형 반환
				int emp_id = rs.getInt("EMPLOYEE_ID");
				String first_name = rs.getString("FIRST_NAME");
				String phone_number = rs.getString("phone_number");
				//String hire_date = rs.getString("hire_date");
				Timestamp hire_date = rs.getTimestamp("hire_date");
				int salary = rs.getInt("salary");
				
				System.out.println("아이디 : " + emp_id);
				System.out.println("이름 : " + first_name);
				System.out.println("전화번호 : " + phone_number);
				System.out.println("입사일 : " + hire_date);
				System.out.println("급여 : " + salary);
				
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		finally {
			try {
				rs.close();     
				pstmt.close();
				conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
	}
	
	//insert할 내용작성
	public void insertOne() {
		Connection conn = null;
		PreparedStatement pstmt = null;
		String sql = "INSERT INTO DEPTS VALUES(?,?,?,?)";
		//resultSet은 insert에서 필요가 없습니다.
		try {
			
			Class.forName("oracle.jdbc.driver.OracleDriver");
			
			//1. conn생성
			
			conn = DriverManager.getConnection(url, uid, upw);
			
			//2. pstmt생성
			
			pstmt = conn.prepareStatement(sql);
			
			pstmt.setInt(1, 300);
			pstmt.setString(2, "704호");
			pstmt.setString(3, "100");
			pstmt.setString(4, "1800");
			
			
			//3. sql실행
			int result = pstmt.executeUpdate();//성공시 1 or 실패시 0
			if(result == 1) {
				System.out.println("인서트 성공");
			}else {
				System.out.println("인서트 실패");
			}
			
		} catch (Exception e) {
			e.printStackTrace();
			try {
				pstmt.close();
				conn.close();
		
				
			} catch (Exception e2) {
				e2.printStackTrace();
			}
			
		}
	}
}
