--where 절
SELECT FIRST_NAME, LAST_NAME, JOB_ID FROM EMPLOYEES
WHERE JOB_ID = 'IT_PROG';

 --대소문자를 구분한다.
SELECT * FROM EMPLOYEES WHERE FIRST_NAME = 'Steven';

SELECT * FROM EMPLOYEES WHERE SALARY >= 15000;

SELECT * FROM EMPLOYEES WHERE SALARY < 10000;

SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID = 100;

 -- 같지 않음 <>
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID <> 100;

 --날짜 비교는 문자열로합니다.
SELECT * FROM EMPLOYEES WHERE HIRE_DATE = '03/06/17';

SELECT * FROM EMPLOYEES WHERE HIRE_DATE <= '04/01/01';

--BETWEEN AND 연산자 (이상~이하) (날짜도 비교가 됨)
SELECT * FROM EMPLOYEES WHERE SALARY BETWEEN 10000 AND 15000;

SELECT * FROM EMPLOYEES WHERE HIRE_DATE BETWEEN '03/03/01' AND '08/03/01';

--IN 연산자(여러개 중 한개라도 맞으면 그값을 기준으로 찾아줌 , 다 맞으면 다 찾아줌)
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID IN(80,90,100);
SELECT * FROM EMPLOYEES WHERE JOB_ID IN ('FI_ACCOUNT' , 'SA_MAN');

--LIKE 연산자(특정 단어가 포험된) - 검색기능에 사용됩니다.
-- %(percent)는 문자가 없거나 또는 하나 이상을 나타냅니다.
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '03%'; -- 03년도로 시작하는 
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '%01'; -- 01일로 끝나는 
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '%05%'; -- 05가 포함되는
SELECT * FROM EMPLOYEES WHERE JOB_ID LIKE '%MAN%'; -- MAN이 포함되는

-- _(under score)는 하나의 문자를 나타냅니다. ( _ 하나당 모든 문자 중 하나를 대체한다고 보면 편하다.)
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '___05%'; --3개의문자가 나오고 05가 나오고  0이상의 문자가 들어가는 데이터를 찾아준다.
SELECT * FROM EMPLOYEES WHERE EMAIL LIKE '_A%'; -- 2번째가 A인

--IS NULL, IS NOT NULL *
SELECT FIRST_NAME, COMMISSION_PCT FROM EMPLOYEES WHERE COMMISSION_PCT IS NULL;
SELECT FIRST_NAME, COMMISSION_PCT FROM EMPLOYEES WHERE COMMISSION_PCT IS NOT NULL;
SELECT * FROM EMPLOYEES WHERE COMMISSION_PCT IS NOT NULL;

SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID IS NULL;

-- AND, OR (AND가 OR보다 우선순위가 높음)
--둘중 하나 만족 (한쪽의 조건이 참이면 찾아줌) 거짓인 데이터는 다 나가리
SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' OR JOB_ID = 'FI_MGR';
--둘다 만족하는 (양쪽의 조건이 참이어야 찾아줌) 거짓인 데이터는 다 나가리
SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' AND JOB_ID = 'FI_MGR';

SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' OR JOB_ID = 'FI_MGR' AND SALARY >= 7000;
SELECT * FROM EMPLOYEES WHERE (JOB_ID = 'IT_PROG' OR JOB_ID = 'FI_MGR') AND SALARY >= 7000;


--NOT (키워드들의 부정)
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID NOT IN (80,90,100);
SELECT * FROM EMPLOYEES WHERE JOB_ID NOT LIKE '%IT%';

-- ORDER BY 구문

SELECT * FROM EMPLOYEES ORDER BY SALARY DESC; --내림차순
SELECT * FROM EMPLOYEES ORDER BY JOB_ID ; -- 디폴트 ASC 오름차순
SELECT * FROM EMPLOYEES WHERE JOB_ID IN ('IT_PROG', 'SA_MAN') ORDER BY FIRST_NAME DESC;

-- ALIAS도 ORDER BY 절에 사용이 됩니다.
SELECT FIRST_NAME || LAST_NAME AS NAME, SALARY FROM EMPLOYEES ORDER BY NAME DESC;

-- 정렬구문을 여러개도 사용할 수 있습니다. (DEPARTMENT_ID 내림차순한 데이터 중에 , FIRST_NAME 오름차순을 해라)
SELECT FIRST_NAME, DEPARTMENT_ID FROM EMPLOYEES ORDER BY DEPARTMENT_ID DESC, FIRST_NAME ASC;









